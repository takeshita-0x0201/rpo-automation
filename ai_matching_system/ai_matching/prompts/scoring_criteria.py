"""
評価スコアリング基準
"""

from dataclasses import dataclass
from typing import Dict, Optional


@dataclass
class WeightProfile:
    """評価項目の重み付けプロファイル"""
    required_skills: float = 0.45  # 必須要件
    practical_ability: float = 0.25  # 実務遂行能力
    preferred_skills: float = 0.15  # 歓迎要件
    organizational_fit: float = 0.10  # 組織適合性
    outstanding_career: float = 0.05  # 突出した経歴


class ScoringCriteria:
    """スコアリング基準を管理するクラス"""
    
    # デフォルトの重み付け
    DEFAULT_WEIGHTS = WeightProfile()
    
    # カテゴリ別の評価基準
    SCORING_CATEGORIES = """# 評価基準と配点（目安）
## 必須要件（{required_weight}%）
- 構造化データのrequired_skills（必須スキル）を最優先で評価
- 構造化データがない場合のみ、求人票の「必須」「必要」「求める」項目を使用
- 1つでも未充足があれば大幅減点（-15点）
- 半数以上未充足なら致命的（-25点）
- コア要件（ポジション名に含まれる要件、資格要件等）の未充足は-30点
- ※重要：類似経験は部分点として評価可能（同一業界80%、類似業界60%、異業界40%）

## 実務遂行能力（{practical_weight}%）
- 求人に関連する実務経験の深さと実績
- 具体的な成果・数値実績を重視
- 直近の経験を高く評価（3年以内100%、5年以内80%、10年以内60%）
- 求人との関連性：直接関連100%、間接関連60%、関連薄40%

## 歓迎要件（{preferred_weight}%）
- 構造化データのpreferred_skills（歓迎スキル）を使用
- 構造化データがない場合のみ、求人票の「歓迎する経験・スキル」「尚可」項目を使用
- 1つ充足ごとに加点（最大15%）
- 特に重要な歓迎要件は2倍の加点
- 必須要件を補強する歓迎要件は追加加点
- ※歓迎要件を満たしていなくても減点はしない
- ※歓迎要件の不足は懸念点に含めない

## 組織適合性（{organizational_weight}%）
- 過去の所属企業と求人企業の類似性（業界、規模、文化）
- 実際の転職実績（成功した環境変化の経験）
- 企業規模適応性（規模差による減点：2段階差で-5点、3段階以上で-10点）
- ※注意：ポテンシャルや適応可能性ではなく、過去の実績から判断

## 突出した経歴・実績（{outstanding_weight}%）
- 必須要件の不足を補う「尖った経歴」（ボーナス要素）
- 求人に関連する分野での業界注目度（関連分野の有名企業での実績）
- 求人に活かせる希少経験（関連事業の立ち上げ、類似領域でのターンアラウンド等）
- 求人に貢献できるユニークな経歴（求人に活かせる異業種経験等）
- 求人領域での圧倒的成果（関連分野での売上○億円達成、ユーザー○万人獲得等）
- ※重要：求人との関連性がない経歴は評価しない。求人に活かせる希少な経歴のみ加点"""
    
    SCORING_GUIDELINES = """# スコアリング指針（厳格基準）
- 85-100点: 必須要件を100%充足＋歓迎要件3個以上＋直近3年の実績
- 70-84点: 必須要件を90%以上充足＋歓迎要件1個以上
- 60-69点: 必須要件を70%以上充足、または突出した経歴で補完
- 40-59点: 必須要件の充足が70%未満
- 0-39点: 必須要件の半数以上が未充足

※重要：必須要件が不明確・推測が必要な場合は、そのことを理由に10-20点減点

※重要：突出した経歴（5%）は本当に希少な場合のみ加点。通常は必須要件と実務能力で評価"""
    
    OUTPUT_FORMAT = """# 出力フォーマット
適合度スコア: [0-100の整数]
確信度: [低/中/高]

## スコア内訳
### 必須要件（45点満点）
- [構造化データの各必須スキル項目]: [点数]/[配点] - [根拠となるレジュメの記載]
- ※構造化データがない場合は求人票から抽出した必須要件を記載
- 小計: [実際の点数]/45点

### 実務遂行能力（25点満点）
- [評価項目]: [点数]/[配点] - [根拠となる実績・経験]
- 小計: [実際の点数]/25点

### 歓迎要件（15点満点）
- [構造化データの各歓迎スキル項目]: [点数]/[配点] - [該当する経験]
- ※構造化データがない場合は求人票から抽出した歓迎要件を記載
- 小計: [実際の点数]/15点

### 組織適合性（10点満点）
- 企業規模適応: [点数]/5点 - [過去の所属企業と求人企業の比較]
- 文化適合: [点数]/5点 - [根拠]
- 小計: [実際の点数]/10点

### 突出した経歴（5点満点）
- [特筆すべき実績]: [点数]/5点
- 小計: [実際の点数]/5点"""
    
    SUMMARY_FORMAT = """評価サマリー:
[以下を含む総合評価]
- 構造化データに基づく評価結果
  * 必須スキル（required_skills）の充足度: ○個中○個充足
  * 歓迎スキル（preferred_skills）の充足度: ○個中○個充足
  * 経験年数要件（experience_years_min）の充足状況
- 構造化データで判断できなかった項目（求人票から補足的に評価）
- 【重要】必須要件不足の場合、その業務遂行上の具体的影響
- 経験の直近性（直近の経験か、過去の経験かを明記）
- 突出した経歴（ある場合は「○○の実績は採用市場でも希少」等と明記）
- 企業規模適応性（経歴企業と求人企業の規模差があれば明記）
- 企業が本質的に求める人材像との適合性（過去実績ベース）
- この候補者の実績・経験に基づく価値
- 総合的な推薦判断（必須要件不足がある場合は、その重大性を明記）"""
    
    @classmethod
    def get_formatted_categories(cls, weights: Optional[WeightProfile] = None) -> str:
        """重み付けを反映したカテゴリ説明を取得"""
        if weights is None:
            weights = cls.DEFAULT_WEIGHTS
        
        return cls.SCORING_CATEGORIES.format(
            required_weight=int(weights.required_skills * 100),
            practical_weight=int(weights.practical_ability * 100),
            preferred_weight=int(weights.preferred_skills * 100),
            organizational_weight=int(weights.organizational_fit * 100),
            outstanding_weight=int(weights.outstanding_career * 100)
        )
    
    @staticmethod
    def get_penalty_rules() -> Dict[str, int]:
        """ペナルティルールを取得"""
        return {
            "missing_one_required": -15,
            "missing_half_required": -25,
            "missing_core_requirement": -30,
            "unclear_requirement": -10  # 必須要件が不明確な場合
        }